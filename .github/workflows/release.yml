name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi

          # Save to file
          echo "$COMMITS" > CHANGELOG.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.version.outputs.VERSION }}
          body_path: CHANGELOG.txt
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
          generate_release_notes: true

  build-ios:
    name: Build iOS Release
    runs-on: macos-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Create placeholder env files
        run: |
          echo "ENVIRONMENT=production" > .env.development
          echo "ENVIRONMENT=production" > .env.staging
          echo "ENVIRONMENT=production" > .env.production

      - name: Build iOS IPA
        run: |
          flutter build ios --release --no-codesign
          mkdir -p build/ios/ipa
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload/
          zip -r ../ipa/BACKDRP_FM.ipa Payload

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-ipa
          path: build/ios/ipa/BACKDRP_FM.ipa

  build-android:
    name: Build Android Release
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Create placeholder env files
        run: |
          echo "ENVIRONMENT=production" > .env.development
          echo "ENVIRONMENT=production" > .env.staging
          echo "ENVIRONMENT=production" > .env.production

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android App Bundle
        run: flutter build appbundle --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab

  build-macos:
    name: Build macOS Release
    runs-on: macos-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Create placeholder env files
        run: |
          echo "ENVIRONMENT=production" > .env.development
          echo "ENVIRONMENT=production" > .env.staging
          echo "ENVIRONMENT=production" > .env.production

      - name: Build macOS
        run: flutter build macos --release

      - name: Create DMG
        run: |
          cd build/macos/Build/Products/Release
          mkdir -p BACKDRP_FM
          cp -R backdrp_fm.app BACKDRP_FM/
          hdiutil create -volname "BACKDRP.FM" -srcfolder BACKDRP_FM -ov -format UDZO BACKDRP_FM.dmg

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-dmg
          path: build/macos/Build/Products/Release/BACKDRP_FM.dmg

  upload-release-assets:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    needs: [build-ios, build-android, build-macos]

    steps:
      - name: Download iOS artifact
        uses: actions/download-artifact@v3
        with:
          name: ios-ipa
          path: ./artifacts

      - name: Download Android APK
        uses: actions/download-artifact@v3
        with:
          name: android-apk
          path: ./artifacts

      - name: Download Android AAB
        uses: actions/download-artifact@v3
        with:
          name: android-aab
          path: ./artifacts

      - name: Download macOS DMG
        uses: actions/download-artifact@v3
        with:
          name: macos-dmg
          path: ./artifacts

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/BACKDRP_FM.ipa
            ./artifacts/app-release.apk
            ./artifacts/app-release.aab
            ./artifacts/BACKDRP_FM.dmg
