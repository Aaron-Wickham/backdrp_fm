// Mocks generated by Mockito 5.4.6 from annotations
// in backdrp_fm/test/bloc/profile/profile_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:backdrp_fm/models/app_user.dart' as _i4;
import 'package:backdrp_fm/models/video.dart' as _i5;
import 'package:backdrp_fm/services/user_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i2.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.AppUser?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(#getUserProfile, [userId]),
        returnValue: _i3.Stream<_i4.AppUser?>.empty(),
      ) as _i3.Stream<_i4.AppUser?>);

  @override
  _i3.Future<bool> updateUserProfile(
    String? userId, {
    String? displayName,
    String? profileImageUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [userId],
          {#displayName: displayName, #profileImageUrl: profileImageUrl},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updateNotificationPreferences(
    String? userId, {
    bool? newSets,
    bool? artistUpdates,
    bool? weeklyDigest,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotificationPreferences,
          [userId],
          {
            #newSets: newSets,
            #artistUpdates: artistUpdates,
            #weeklyDigest: weeklyDigest,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updateFavoriteGenres(String? userId, List<String>? genres) =>
      (super.noSuchMethod(
        Invocation.method(#updateFavoriteGenres, [userId, genres]),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Stream<List<_i5.Video>> getUserLikedVideos(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(#getUserLikedVideos, [userId]),
        returnValue: _i3.Stream<List<_i5.Video>>.empty(),
      ) as _i3.Stream<List<_i5.Video>>);

  @override
  _i3.Stream<List<_i5.Video>> getUserSavedVideos(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(#getUserSavedVideos, [userId]),
        returnValue: _i3.Stream<List<_i5.Video>>.empty(),
      ) as _i3.Stream<List<_i5.Video>>);

  @override
  _i3.Future<bool> subscribeToEmail(String? userId, bool? subscribe) =>
      (super.noSuchMethod(
        Invocation.method(#subscribeToEmail, [userId, subscribe]),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> subscribeToPush(String? userId, bool? subscribe) =>
      (super.noSuchMethod(
        Invocation.method(#subscribeToPush, [userId, subscribe]),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> updateLastActive(String? userId) => (super.noSuchMethod(
        Invocation.method(#updateLastActive, [userId]),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.AppUser?> getUser(String? userId) => (super.noSuchMethod(
        Invocation.method(#getUser, [userId]),
        returnValue: _i3.Future<_i4.AppUser?>.value(),
      ) as _i3.Future<_i4.AppUser?>);
}
